#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API –ø—Ä–æ–≤–µ—Ä–∫–∏ email
"""
import requests
import json

def test_email_check():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –ø—Ä–æ–≤–µ—Ä–∫–∏ email"""
    base_url = "http://localhost:5000"
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ —Å–ª—É—á–∞–∏
    test_cases = [
        {
            "email": "test@test.ru",
            "expected": "exists",
            "description": "–°—É—â–µ—Å—Ç–≤—É—é—â–∏–π email"
        },
        {
            "email": "newuser@example.com", 
            "expected": "available",
            "description": "–ù–æ–≤—ã–π –¥–æ—Å—Ç—É–ø–Ω—ã–π email"
        },
        {
            "email": "invalid-email",
            "expected": "invalid",
            "description": "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email"
        },
        {
            "email": "",
            "expected": "error",
            "description": "–ü—É—Å—Ç–æ–π email"
        }
    ]
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –ø—Ä–æ–≤–µ—Ä–∫–∏ email...\n")
    
    for i, test_case in enumerate(test_cases, 1):
        print(f"–¢–µ—Å—Ç {i}: {test_case['description']}")
        print(f"Email: '{test_case['email']}'")
        
        try:
            response = requests.post(
                f"{base_url}/api/check_email",
                json={"email": test_case["email"]},
                headers={"Content-Type": "application/json"}
            )
            
            if response.status_code == 200:
                data = response.json()
                print(f"–û—Ç–≤–µ—Ç: {json.dumps(data, ensure_ascii=False, indent=2)}")
                
                # –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
                if test_case["expected"] == "exists" and data.get("exists"):
                    print("‚úÖ –ü–†–û–ô–î–ï–ù: Email —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                elif test_case["expected"] == "available" and not data.get("exists") and data.get("valid"):
                    print("‚úÖ –ü–†–û–ô–î–ï–ù: Email –¥–æ—Å—Ç—É–ø–µ–Ω")
                elif test_case["expected"] == "invalid" and not data.get("valid"):
                    print("‚úÖ –ü–†–û–ô–î–ï–ù: –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ–±–Ω–∞—Ä—É–∂–µ–Ω")
                else:
                    print("‚ùå –ù–ï –ü–†–û–ô–î–ï–ù: –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç")
            else:
                print(f"‚ùå –ù–ï –ü–†–û–ô–î–ï–ù: HTTP {response.status_code}")
                if test_case["expected"] == "error":
                    print("‚úÖ –ù–æ —ç—Ç–æ –æ–∂–∏–¥–∞–µ–º–∞—è –æ—à–∏–±–∫–∞")
                    
        except requests.exceptions.ConnectionError:
            print("‚ùå –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É")
            print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ http://localhost:5000")
            break
        except Exception as e:
            print(f"‚ùå –û–®–ò–ë–ö–ê: {e}")
        
        print("-" * 50)

if __name__ == "__main__":
    test_email_check()