#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –ª–∏–º–∏—Ç–∞ AI —á–∞—Ç–∞ –±–µ–∑ Flask test client
"""
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

def test_simple_ai_chat_limit():
    """–ü—Ä–æ—Å—Ç–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–∏–º–∏—Ç–∞ AI —á–∞—Ç–∞"""
    print("üß™ –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –ª–∏–º–∏—Ç–∞ AI —á–∞—Ç–∞")
    print("=" * 50)
    
    try:
        from auth import User
        from subscription_manager import subscription_manager
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        test_user = User.create("simple_chat_test@example.com", "Simple Chat Test", "password123")
        if not test_user:
            test_user = User.get_by_email("simple_chat_test@example.com")
        
        user_id = test_user.id
        print(f"üë§ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {test_user.email} (ID: {user_id})")
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–ª–∞–Ω STARTER (–ª–∏–º–∏—Ç 5 —Å–æ–æ–±—â–µ–Ω–∏–π)
        success = subscription_manager.upgrade_subscription(user_id, 'starter')
        print(f"‚úÖ –ü–ª–∞–Ω STARTER —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {success}")
        
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è AI —á–∞—Ç–∞
        import sqlite3
        conn = sqlite3.connect('ai_study.db')
        c = conn.cursor()
        c.execute('UPDATE users SET ai_chat_messages_used = 0 WHERE id = ?', (user_id,))
        conn.commit()
        conn.close()
        print("üîÑ –°—á–µ—Ç—á–∏–∫ AI —á–∞—Ç–∞ —Å–±—Ä–æ—à–µ–Ω")
        
        print("\nüí¨ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–∏–º–∏—Ç–∞ AI —á–∞—Ç–∞:")
        print("-" * 40)
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º 5 —Å–æ–æ–±—â–µ–Ω–∏–π (–¥–æ–ª–∂–Ω—ã –ø—Ä–æ–π—Ç–∏)
        for i in range(1, 6):
            allowed, message = subscription_manager.check_ai_chat_limit(user_id)
            if allowed:
                # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
                subscription_manager.record_usage(user_id, 'ai_chat', 1, f'test_message_{i}')
                print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ {i}/5: —Ä–∞–∑—Ä–µ—à–µ–Ω–æ")
            else:
                print(f"‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ {i}/5: –∑–∞–ø—Ä–µ—â–µ–Ω–æ - {message}")
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
        usage_stats = subscription_manager.get_usage_stats(user_id)
        print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ—Å–ª–µ 5 —Å–æ–æ–±—â–µ–Ω–∏–π:")
        print(f"   –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: {usage_stats['ai_chat']['used']}")
        print(f"   –õ–∏–º–∏—Ç: {usage_stats['ai_chat']['limit']}")
        
        # –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å 6-–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∑–∞–ø—Ä–µ—â–µ–Ω–æ)
        print(f"\nüö´ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–≤—ã—à–µ–Ω–∏—è –ª–∏–º–∏—Ç–∞:")
        print("-" * 40)
        
        allowed, message = subscription_manager.check_ai_chat_limit(user_id)
        if allowed:
            print(f"‚ùå 6-–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ!")
        else:
            print(f"‚úÖ 6-–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–ø—Ä–µ—â–µ–Ω–æ")
            print(f"   –°–æ–æ–±—â–µ–Ω–∏–µ: {message}")
        
        # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        usage_stats = subscription_manager.get_usage_stats(user_id)
        print(f"\nüìä –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"   –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: {usage_stats['ai_chat']['used']}")
        print(f"   –õ–∏–º–∏—Ç: {usage_stats['ai_chat']['limit']}")
        print(f"   –ü—Ä–µ–≤—ã—à–µ–Ω: {usage_stats['ai_chat']['used'] >= usage_stats['ai_chat']['limit']}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–∏–º–∏—Ç–∞ –Ω–∞–ø—Ä—è–º—É—é
        print(f"\nüîç –ü—Ä—è–º–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏–∫–∏:")
        print("-" * 40)
        
        subscription = subscription_manager.get_user_subscription(user_id)
        used = subscription['ai_chat_messages_used']
        limit = subscription['limits'].ai_chat_messages
        
        print(f"   –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –∏–∑ –ë–î: {used}")
        print(f"   –õ–∏–º–∏—Ç –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {limit}")
        print(f"   –£—Å–ª–æ–≤–∏–µ used >= limit: {used} >= {limit} = {used >= limit}")
        print(f"   –î–æ–ª–∂–Ω–æ –±—ã—Ç—å –∑–∞–ø—Ä–µ—â–µ–Ω–æ: {used >= limit}")
        
        print(f"\nüéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
        return user_id
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")
        import traceback
        traceback.print_exc()
        return None

def cleanup_simple_test(user_id):
    """–û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
    if not user_id:
        return
        
    import sqlite3
    
    print("\nüßπ –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
    
    conn = sqlite3.connect('ai_study.db')
    c = conn.cursor()
    
    try:
        # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        c.execute('DELETE FROM subscription_usage WHERE user_id = ?', (user_id,))
        c.execute('DELETE FROM subscription_history WHERE user_id = ?', (user_id,))
        c.execute('DELETE FROM users WHERE id = ?', (user_id,))
        
        conn.commit()
        print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ: {e}")
        conn.rollback()
    finally:
        conn.close()

if __name__ == '__main__':
    user_id = test_simple_ai_chat_limit()
    
    if user_id:
        cleanup = input("\n–û—á–∏—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ? (y/n): ").lower().strip()
        if cleanup in ['y', 'yes', '–¥–∞']:
            cleanup_simple_test(user_id)