#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –≤–∏–¥–µ–æ—Ñ–∞–π–ª–æ–≤ –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏ –æ—Ç–º–µ–Ω—ã
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

import requests
import time
import json
import tempfile
from pathlib import Path

def test_video_cleanup_after_completion():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –≤–∏–¥–µ–æ—Ñ–∞–π–ª–æ–≤ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∞–ª–∏–∑–∞"""
    
    base_url = "http://127.0.0.1:5000"
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –≤–∏–¥–µ–æ—Ñ–∞–π–ª–æ–≤ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∞–ª–∏–∑–∞")
    print("=" * 70)
    
    # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è cookies
    session = requests.Session()
    
    # 1. –õ–æ–≥–∏–Ω–∏–º—Å—è
    print("1. üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è...")
    login_data = {
        'username': 'test@example.com',
        'password': 'test123'
    }
    
    try:
        login_response = session.post(f"{base_url}/login", data=login_data)
        if login_response.status_code != 200:
            print("‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –°–æ–∑–¥–∞–π—Ç–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
            return False
        print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–∞–ø–∫–∏ uploads –¥–æ –∑–∞–≥—Ä—É–∑–∫–∏
    print("\n2. üìÅ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–∞–ø–∫–∏ uploads...")
    upload_folder = "uploads"
    
    if os.path.exists(upload_folder):
        files_before = set(os.listdir(upload_folder))
        print(f"   –§–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ –¥–æ –∑–∞–≥—Ä—É–∑–∫–∏: {len(files_before)}")
    else:
        files_before = set()
        print("   –ü–∞–ø–∫–∞ uploads –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    
    # 3. –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ—Ä–æ—Ç–∫–æ–µ –≤–∏–¥–µ–æ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    print("\n3. üé• –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ—Ä–æ—Ç–∫–æ–µ –≤–∏–¥–µ–æ...")
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ—Ä–æ—Ç–∫–æ–µ –≤–∏–¥–µ–æ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    test_video_url = "https://www.youtube.com/watch?v=dQw4w9WgXcQ"  # Rick Roll (–∫–æ—Ä–æ—Ç–∫–æ–µ)
    
    video_data = {
        'video_url': test_video_url
    }
    
    try:
        upload_response = session.post(f"{base_url}/upload_url", data=video_data)
        
        if upload_response.status_code == 200:
            response_data = upload_response.json()
            
            if response_data.get('success') and response_data.get('task_id'):
                task_id = response_data['task_id']
                print(f"‚úÖ –í–∏–¥–µ–æ –ø—Ä–∏–Ω—è—Ç–æ –∫ –æ–±—Ä–∞–±–æ—Ç–∫–µ, task_id: {task_id}")
                
                # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª –ø–æ—è–≤–∏–ª—Å—è –≤ –ø–∞–ø–∫–µ uploads
                print("\n4. üìÅ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—è–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –≤ uploads...")
                
                # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
                time.sleep(10)
                
                if os.path.exists(upload_folder):
                    files_during = set(os.listdir(upload_folder))
                    new_files = files_during - files_before
                    
                    if new_files:
                        print(f"‚úÖ –ù–æ–≤—ã–µ —Ñ–∞–π–ª—ã –ø–æ—è–≤–∏–ª–∏—Å—å: {list(new_files)}")
                        video_file = list(new_files)[0]  # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π –Ω–æ–≤—ã–π —Ñ–∞–π–ª
                        video_path = os.path.join(upload_folder, video_file)
                        
                        if os.path.exists(video_path):
                            file_size = os.path.getsize(video_path)
                            print(f"   –†–∞–∑–º–µ—Ä –≤–∏–¥–µ–æ—Ñ–∞–π–ª–∞: {file_size} bytes")
                        else:
                            print("‚ùå –í–∏–¥–µ–æ—Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
                            return False
                    else:
                        print("‚ö†Ô∏è –ù–æ–≤—ã–µ —Ñ–∞–π–ª—ã –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã (–≤–æ–∑–º–æ–∂–Ω–æ, –∑–∞–≥—Ä—É–∑–∫–∞ –µ—â–µ –∏–¥–µ—Ç)")
                
                # 5. –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∞–ª–∏–∑–∞
                print("\n5. ‚è≥ –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∞–ª–∏–∑–∞...")
                
                max_wait_time = 300  # 5 –º–∏–Ω—É—Ç –º–∞–∫—Å–∏–º—É–º
                start_time = time.time()
                
                while time.time() - start_time < max_wait_time:
                    status_response = session.get(f"{base_url}/api/analysis/status/{task_id}")
                    
                    if status_response.status_code == 200:
                        status_data = status_response.json()
                        
                        if status_data.get('success'):
                            task_status = status_data['task']['status']
                            current_stage = status_data['task'].get('current_stage', 'Unknown')
                            progress = status_data['task'].get('progress', 0)
                            
                            print(f"   üìä –°—Ç–∞—Ç—É—Å: {task_status}, –≠—Ç–∞–ø: {current_stage}, –ü—Ä–æ–≥—Ä–µ—Å—Å: {progress}%")
                            
                            if task_status == 'completed':
                                print("‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
                                break
                            elif task_status in ['failed', 'cancelled']:
                                print(f"‚ùå –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º: {task_status}")
                                return False
                        else:
                            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞: {status_data.get('error')}")
                            return False
                    else:
                        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ —Å—Ç–∞—Ç—É—Å–∞: {status_response.status_code}")
                        return False
                    
                    time.sleep(10)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥
                else:
                    print("‚ùå –ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∞–ª–∏–∑–∞")
                    return False
                
                # 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–∏–¥–µ–æ—Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
                print("\n6. üóëÔ∏è –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –≤–∏–¥–µ–æ—Ñ–∞–π–ª–∞...")
                
                # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ—á–∏—Å—Ç–∫–∏
                time.sleep(5)
                
                if os.path.exists(upload_folder):
                    files_after = set(os.listdir(upload_folder))
                    remaining_new_files = files_after - files_before
                    
                    if not remaining_new_files:
                        print("‚úÖ –í–∏–¥–µ–æ—Ñ–∞–π–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∞–ª–∏–∑–∞!")
                        return True
                    else:
                        print(f"‚ùå –í–∏–¥–µ–æ—Ñ–∞–π–ª –Ω–µ —É–¥–∞–ª–µ–Ω: {list(remaining_new_files)}")
                        
                        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
                        for file in remaining_new_files:
                            file_path = os.path.join(upload_folder, file)
                            if os.path.exists(file_path):
                                file_size = os.path.getsize(file_path)
                                file_age = time.time() - os.path.getmtime(file_path)
                                print(f"   –§–∞–π–ª: {file}, –†–∞–∑–º–µ—Ä: {file_size} bytes, –í–æ–∑—Ä–∞—Å—Ç: {file_age:.1f} —Å–µ–∫")
                        
                        return False
                else:
                    print("‚ö†Ô∏è –ü–∞–ø–∫–∞ uploads –∏—Å—á–µ–∑–ª–∞")
                    return True  # –≠—Ç–æ —Ç–æ–∂–µ —Å—á–∏—Ç–∞–µ—Ç—Å—è —É—Å–ø–µ—à–Ω–æ–π –æ—á–∏—Å—Ç–∫–æ–π
                
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ: {response_data.get('error')}")
                return False
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ HTTP –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≤–∏–¥–µ–æ: {upload_response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        return False

def test_video_cleanup_after_cancellation():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –≤–∏–¥–µ–æ—Ñ–∞–π–ª–æ–≤ –ø–æ—Å–ª–µ –æ—Ç–º–µ–Ω—ã –∞–Ω–∞–ª–∏–∑–∞"""
    
    base_url = "http://127.0.0.1:5000"
    
    print("\n" + "=" * 70)
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –≤–∏–¥–µ–æ—Ñ–∞–π–ª–æ–≤ –ø–æ—Å–ª–µ –æ—Ç–º–µ–Ω—ã –∞–Ω–∞–ª–∏–∑–∞")
    print("=" * 70)
    
    # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è cookies
    session = requests.Session()
    
    # 1. –õ–æ–≥–∏–Ω–∏–º—Å—è
    print("1. üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è...")
    login_data = {
        'username': 'test@example.com',
        'password': 'test123'
    }
    
    try:
        login_response = session.post(f"{base_url}/login", data=login_data)
        if login_response.status_code != 200:
            print("‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
            return False
        print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–∞–ø–∫–∏ uploads –¥–æ –∑–∞–≥—Ä—É–∑–∫–∏
    print("\n2. üìÅ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–∞–ø–∫–∏ uploads...")
    upload_folder = "uploads"
    
    if os.path.exists(upload_folder):
        files_before = set(os.listdir(upload_folder))
        print(f"   –§–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ –¥–æ –∑–∞–≥—Ä—É–∑–∫–∏: {len(files_before)}")
    else:
        files_before = set()
        print("   –ü–∞–ø–∫–∞ uploads –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    
    # 3. –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–∏–¥–µ–æ
    print("\n3. üé• –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–∏–¥–µ–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–º–µ–Ω—ã...")
    
    test_video_url = "https://www.youtube.com/watch?v=dQw4w9WgXcQ"
    
    video_data = {
        'video_url': test_video_url
    }
    
    try:
        upload_response = session.post(f"{base_url}/upload_url", data=video_data)
        
        if upload_response.status_code == 200:
            response_data = upload_response.json()
            
            if response_data.get('success') and response_data.get('task_id'):
                task_id = response_data['task_id']
                print(f"‚úÖ –í–∏–¥–µ–æ –ø—Ä–∏–Ω—è—Ç–æ –∫ –æ–±—Ä–∞–±–æ—Ç–∫–µ, task_id: {task_id}")
                
                # 4. –ñ–¥–µ–º –Ω–∞—á–∞–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏
                print("\n4. ‚è≥ –ñ–¥–µ–º –Ω–∞—á–∞–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏...")
                time.sleep(5)
                
                # 5. –û—Ç–º–µ–Ω—è–µ–º –∞–Ω–∞–ª–∏–∑
                print(f"\n5. ‚èπÔ∏è –û—Ç–º–µ–Ω—è–µ–º –∞–Ω–∞–ª–∏–∑ –∑–∞–¥–∞—á–∏ {task_id}...")
                
                cancel_response = session.post(f"{base_url}/api/analysis/cancel/{task_id}")
                
                if cancel_response.status_code == 200:
                    cancel_data = cancel_response.json()
                    
                    if cancel_data.get('success'):
                        print("‚úÖ –ó–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ç–º–µ–Ω—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ")
                        
                        # 6. –ñ–¥–µ–º –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–º–µ–Ω—ã
                        print("\n6. ‚è≥ –ñ–¥–µ–º –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–º–µ–Ω—ã...")
                        time.sleep(10)
                        
                        # 7. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–∏–¥–µ–æ—Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω –ø–æ—Å–ª–µ –æ—Ç–º–µ–Ω—ã
                        print("\n7. üóëÔ∏è –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –≤–∏–¥–µ–æ—Ñ–∞–π–ª–∞ –ø–æ—Å–ª–µ –æ—Ç–º–µ–Ω—ã...")
                        
                        if os.path.exists(upload_folder):
                            files_after = set(os.listdir(upload_folder))
                            remaining_new_files = files_after - files_before
                            
                            if not remaining_new_files:
                                print("‚úÖ –í–∏–¥–µ–æ—Ñ–∞–π–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω –ø–æ—Å–ª–µ –æ—Ç–º–µ–Ω—ã –∞–Ω–∞–ª–∏–∑–∞!")
                                return True
                            else:
                                print(f"‚ùå –í–∏–¥–µ–æ—Ñ–∞–π–ª –Ω–µ —É–¥–∞–ª–µ–Ω –ø–æ—Å–ª–µ –æ—Ç–º–µ–Ω—ã: {list(remaining_new_files)}")
                                
                                # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
                                for file in remaining_new_files:
                                    file_path = os.path.join(upload_folder, file)
                                    if os.path.exists(file_path):
                                        file_size = os.path.getsize(file_path)
                                        file_age = time.time() - os.path.getmtime(file_path)
                                        print(f"   –§–∞–π–ª: {file}, –†–∞–∑–º–µ—Ä: {file_size} bytes, –í–æ–∑—Ä–∞—Å—Ç: {file_age:.1f} —Å–µ–∫")
                                
                                return False
                        else:
                            print("‚ö†Ô∏è –ü–∞–ø–∫–∞ uploads –∏—Å—á–µ–∑–ª–∞")
                            return True
                    else:
                        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–º–µ–Ω—ã: {cancel_data.get('error')}")
                        return False
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç–º–µ–Ω—ã: {cancel_response.status_code}")
                    return False
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ: {response_data.get('error')}")
                return False
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ HTTP –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≤–∏–¥–µ–æ: {upload_response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        return False

def test_cleanup_api():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –æ—á–∏—Å—Ç–∫–∏ —Ñ–∞–π–ª–æ–≤"""
    
    base_url = "http://127.0.0.1:5000"
    
    print("\n" + "=" * 70)
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –æ—á–∏—Å—Ç–∫–∏ —Ñ–∞–π–ª–æ–≤")
    print("=" * 70)
    
    # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è cookies
    session = requests.Session()
    
    # 1. –õ–æ–≥–∏–Ω–∏–º—Å—è –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
    print("1. üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä...")
    login_data = {
        'username': 'test@test.ru',  # –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
        'password': 'admin123'
    }
    
    try:
        login_response = session.post(f"{base_url}/login", data=login_data)
        if login_response.status_code != 200:
            print("‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
            print("   –°–æ–∑–¥–∞–π—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è test@test.ru —Å –ø–∞—Ä–æ–ª–µ–º admin123")
            return False
        print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —É—Å–ø–µ—à–Ω–∞")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False
    
    # 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –æ—á–∏—Å—Ç–∫–∏
    print("\n2. üìä –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ñ–∞–π–ª–æ–≤...")
    
    try:
        stats_response = session.get(f"{base_url}/api/cleanup/status")
        
        if stats_response.status_code == 200:
            stats_data = stats_response.json()
            
            if stats_data.get('success'):
                stats = stats_data['stats']
                print("‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞:")
                print(f"   –í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤: {stats['total_files']}")
                print(f"   –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä: {stats['total_size_mb']} MB")
                print(f"   –°—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤: {stats['old_files']}")
                print(f"   –†–∞–∑–º–µ—Ä —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤: {stats['old_size_mb']} MB")
                print(f"   –ê–∫—Ç–∏–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: {stats['active_files']}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {stats_data.get('error')}")
                return False
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ HTTP –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {stats_response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
        return False
    
    # 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä—É—á–Ω—É—é –æ—á–∏—Å—Ç–∫—É
    print("\n3. üßπ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä—É—á–Ω—É—é –æ—á–∏—Å—Ç–∫—É...")
    
    try:
        cleanup_data = {
            'upload_folder': 'uploads',
            'task_days': 7,
            'file_hours': 0  # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã —Å—Ç–∞—Ä—à–µ 0 —á–∞—Å–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        }
        
        cleanup_response = session.post(
            f"{base_url}/api/cleanup/files",
            json=cleanup_data,
            headers={'Content-Type': 'application/json'}
        )
        
        if cleanup_response.status_code == 200:
            cleanup_result = cleanup_response.json()
            
            if cleanup_result.get('success'):
                print("‚úÖ –†—É—á–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
                print(f"   –°–æ–æ–±—â–µ–Ω–∏–µ: {cleanup_result.get('message')}")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Ä—É—á–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏: {cleanup_result.get('error')}")
                return False
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ HTTP –ø—Ä–∏ —Ä—É—á–Ω–æ–π –æ—á–∏—Å—Ç–∫–µ: {cleanup_response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ —Ä—É—á–Ω–æ–π –æ—á–∏—Å—Ç–∫–µ: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ì–û –£–î–ê–õ–ï–ù–ò–Ø –í–ò–î–ï–û–§–ê–ô–õ–û–í")
    print("=" * 70)
    print("üìù –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://127.0.0.1:5000")
    print("üë§ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–æ–∑–¥–∞–Ω—ã —Ç–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:")
    print("   - test@example.com / test123 (–æ–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å)")
    print("   - test@test.ru / admin123 (–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä)")
    print("üé• –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ YouTube")
    print()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    completion_test_ok = test_video_cleanup_after_completion()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ –æ—Ç–º–µ–Ω—ã
    cancellation_test_ok = test_video_cleanup_after_cancellation()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º API –æ—á–∏—Å—Ç–∫–∏
    api_test_ok = test_cleanup_api()
    
    print("\n" + "=" * 70)
    print("üìä –ò–¢–û–ì–û–í–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´")
    print("=" * 70)
    
    all_tests_passed = completion_test_ok and cancellation_test_ok and api_test_ok
    
    if all_tests_passed:
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print("‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –≤–∏–¥–µ–æ—Ñ–∞–π–ª–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ:")
        print("   ‚Ä¢ –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∞–ª–∏–∑–∞ - ‚úÖ")
        print("   ‚Ä¢ –ü–æ—Å–ª–µ –æ—Ç–º–µ–Ω—ã –∞–Ω–∞–ª–∏–∑–∞ - ‚úÖ")
        print("   ‚Ä¢ API —Ä—É—á–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ - ‚úÖ")
        print("\nüöÄ –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ö –ü–†–û–î–ê–ö–®–ï–ù–£!")
    else:
        print("‚ùå –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ù–ï –ü–†–û–ô–î–ï–ù–´")
        print("üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏")
    
    print("\nüìã –î–µ—Ç–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
    print(f"   –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è:  {'‚úÖ OK' if completion_test_ok else '‚ùå FAIL'}")
    print(f"   –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ –æ—Ç–º–µ–Ω—ã:      {'‚úÖ OK' if cancellation_test_ok else '‚ùå FAIL'}")
    print(f"   API –æ—á–∏—Å—Ç–∫–∏:                {'‚úÖ OK' if api_test_ok else '‚ùå FAIL'}")
    
    print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    if not completion_test_ok:
        print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —Ñ–∞–π–ª—ã —É–¥–∞–ª—è—é—Ç—Å—è –≤ analysis_manager.py –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è")
        print("   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    if not cancellation_test_ok:
        print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —Ñ–∞–π–ª—ã —É–¥–∞–ª—è—é—Ç—Å—è –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –≤ analysis_manager.py")
        print("   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ—á–∏—Å—Ç–∫–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ download_video_from_url –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ")
    if not api_test_ok:
        print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è test@test.ru")
        print("   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ API —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã /api/cleanup/* —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    
    print("\nüéØ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    if all_tests_passed:
        print("   1. –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É")
        print("   2. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –∫–∞–∂–¥—ã–µ 6 —á–∞—Å–æ–≤")
        print("   3. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å API –¥–ª—è —Ä—É—á–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏")
    else:
        print("   1. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –≤—ã—è–≤–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã")
        print("   2. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ")
        print("   3. –ü—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–∏ - –¥–µ–ø–ª–æ–π –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω")