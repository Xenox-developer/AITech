#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from analytics import element_analytics
import uuid
from datetime import datetime, timedelta
import random

def test_analytics():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∞–Ω–∞–ª–∏—Ç–∏–∫–∏"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∞–Ω–∞–ª–∏—Ç–∏–∫–∏...")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Å–µ—Å—Å–∏—é
    session_id = str(uuid.uuid4())
    user_id = 1  # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID 1 —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    
    print(f"üì± –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é: {session_id}")
    element_analytics.start_session(
        session_id=session_id,
        user_id=user_id,
        user_agent="Test Browser 1.0",
        ip_address="127.0.0.1"
    )
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
    test_interactions = [
        ('button', 'upload-btn', 'click', '/', '–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞'),
        ('link', 'dashboard-link', 'click', '/', '–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞'),
        ('form', 'upload-form', 'submit', '/', '–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞'),
        ('button', 'analyze-btn', 'click', '/result/123', '–†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞'),
        ('content', 'flashcard-1', 'view', '/result/123', '–†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞'),
        ('button', 'next-card', 'click', '/result/123', '–†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞'),
        ('button', 'prev-card', 'click', '/result/123', '–†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞'),
        ('link', 'download-link', 'click', '/result/123', '–†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞'),
        ('navigation', 'main-menu', 'click', '/dashboard', '–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç'),
        ('button', 'filter-pdf', 'click', '/my-results', '–ú–æ–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã'),
    ]
    
    print("üìä –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è...")
    for element_type, element_id, action_type, page_url, page_title in test_interactions:
        metadata = {
            'test_data': True,
            'timestamp': datetime.now().isoformat()
        }
        
        element_analytics.record_interaction(
            user_id=user_id,
            session_id=session_id,
            element_type=element_type,
            element_id=element_id,
            action_type=action_type,
            page_url=page_url,
            page_title=page_title,
            metadata=metadata
        )
        print(f"  ‚úÖ {element_type}.{element_id} - {action_type}")
    
    # –ó–∞–≤–µ—Ä—à–∞–µ–º —Å–µ—Å—Å–∏—é
    element_analytics.end_session(session_id)
    print(f"üèÅ –°–µ—Å—Å–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞: {session_id}")
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    print("\nüìà –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É...")
    
    # –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
    popular = element_analytics.get_popular_elements(limit=5, days=1)
    print(f"\nüî• –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã (—Ç–æ–ø-5):")
    for i, elem in enumerate(popular, 1):
        print(f"  {i}. {elem['element_type']}.{elem['element_id']} - {elem['action_type']}")
        print(f"     –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π: {elem['total_interactions']}, –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {elem['unique_users']}")
    
    # –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    stats = element_analytics.get_element_usage_stats(days=1)
    print(f"\nüìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –¥–µ–Ω—å:")
    print(f"  –í—Å–µ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π: {stats['total_interactions']}")
    print(f"  –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {stats['unique_users']}")
    print(f"  –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å–µ—Å—Å–∏–π: {stats['unique_sessions']}")
    print(f"  –ê–∫—Ç–∏–≤–Ω—ã—Ö –¥–Ω–µ–π: {stats['active_days']}")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–∏–ø–∞–º –¥–µ–π—Å—Ç–≤–∏–π
    print(f"\nüéØ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–∏–ø–∞–º –¥–µ–π—Å—Ç–≤–∏–π:")
    for action in stats['action_stats']:
        print(f"  {action['action_type']}: {action['interactions']} –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π, {action['unique_users']} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —ç–ª–µ–º–µ–Ω—Ç–∞–º
    print(f"\nüéõÔ∏è –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —ç–ª–µ–º–µ–Ω—Ç–∞–º (—Ç–æ–ø-5):")
    for elem in stats['element_stats'][:5]:
        print(f"  {elem['element_type']}.{elem['element_id']}: {elem['interactions']} –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π")
    
    # –ü–∞—Ç—Ç–µ—Ä–Ω—ã –ø–æ–≤–µ–¥–µ–Ω–∏—è
    behavior = element_analytics.get_user_behavior_patterns(user_id=user_id, days=1)
    print(f"\nüë§ –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:")
    for user in behavior['active_users'][:3]:
        print(f"  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user['user_id']}: {user['total_interactions']} –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π")
    
    # –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º
    page_stats = element_analytics.get_page_analytics(days=1)
    print(f"\nüìÑ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º:")
    for page in page_stats['page_stats'][:5]:
        print(f"  {page['page_url']}: {page['total_interactions']} –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π, {page['unique_users']} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")

if __name__ == '__main__':
    test_analytics()