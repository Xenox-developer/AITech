#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –æ–±—É—á–µ–Ω–∏—è
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

import sqlite3
from app import get_user_learning_stats

def test_personalized_stats():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    print("üìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –æ–±—É—á–µ–Ω–∏—è...")
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    conn = sqlite3.connect('ai_study.db')
    c = conn.cursor()
    
    c.execute('SELECT id, username, email FROM users ORDER BY id')
    users = c.fetchall()
    
    print(f"\nüë• –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users)}")
    
    for user_id, username, email in users:
        print(f"\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {username} ({email})")
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            stats = get_user_learning_stats(user_id)
            
            print(f"  üìÅ –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: {stats['total_results']}")
            print(f"  üéØ –ò–∑—É—á–µ–Ω–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫: {stats['mastered_cards']}")
            print(f"  üìö –í—Å–µ–≥–æ –∫–∞—Ä—Ç–æ—á–µ–∫ –∏–∑—É—á–µ–Ω–æ: {stats['total_cards_studied']}")
            print(f"  ‚è∞ –ö –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—é —Å–µ–≥–æ–¥–Ω—è: {stats['cards_due_today']}")
            print(f"  üìä –û–±—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å –æ–±—É—á–µ–Ω–∏—è: {stats['learning_progress']}%")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Ç–æ—á–∫–∏
            print(f"  üèÅ –ö–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Ç–æ—á–∫–∏:")
            for i, checkpoint in enumerate(stats['checkpoints'], 1):
                status_emoji = "‚úÖ" if checkpoint['status'] == 'completed' else ("üîÑ" if checkpoint['status'] == 'current' else "‚è≥")
                print(f"    {i}. {status_emoji} {checkpoint['title']}: {checkpoint['progress']}% ({checkpoint['target']})")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ü–µ–ª–µ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏
            print(f"  üéØ –¶–µ–ª–µ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏:")
            for target in stats['targets']:
                color_emoji = "üü¢" if target['color'] == 'success' else ("üü°" if target['color'] == 'warning' else "üî¥")
                print(f"    {color_emoji} {target['label']}: {target['value']}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —É—á–µ–±–Ω—ã–µ —Å–µ—Å—Å–∏–∏
            print(f"  üìö –£—á–µ–±–Ω—ã–µ —Å–µ—Å—Å–∏–∏:")
            for session in stats['study_sessions']:
                phase_emoji = "üü¶" if session['phase'] == '–û–°–ù–û–í–´' else ("üü©" if session['phase'] == '–†–ê–ó–í–ò–¢–ò–ï' else ("üü®" if session['phase'] == '–ú–ê–°–¢–ï–†–°–¢–í–û' else ("üü™" if session['phase'] == '–ù–ê–ß–ê–õ–û' else "üîÑ")))
                print(f"    {phase_emoji} {session['title']} ({session['phase']})")
                print(f"       üìÖ {session['date']} | ‚è±Ô∏è {session['duration']} | üìä {session['difficulty']}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–∏–ø—ã —Ñ–∞–π–ª–æ–≤
            if stats['file_types']:
                print(f"  üìÑ –¢–∏–ø—ã —Ñ–∞–π–ª–æ–≤:")
                for file_type, count in stats['file_types'].items():
                    print(f"    {file_type}: {count} —Ñ–∞–π–ª–æ–≤")
            
        except Exception as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
    
    conn.close()
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("\n–¢–µ–ø–µ—Ä—å –∫–∞–∂–¥—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–≤–∏–¥–∏—Ç —Å–≤–æ—é –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É:")
    print("1. –í–æ–π–¥–∏—Ç–µ –ø–æ–¥ —Ä–∞–∑–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏")
    print("2. –û—Ç–∫—Ä–æ–π—Ç–µ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç (/dashboard)")
    print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –æ—Ç–ª–∏—á–∞—é—Ç—Å—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

if __name__ == '__main__':
    test_personalized_stats()