#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç–º–µ–Ω—ã —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏ –≤–∏–¥–µ–æ
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

import requests
import time
import json
import threading

def test_video_transcription_cancel():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω—ã —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏ –≤–∏–¥–µ–æ"""
    
    base_url = "http://127.0.0.1:5000"
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω—ã —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏ –≤–∏–¥–µ–æ")
    print("=" * 60)
    
    # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è cookies
    session = requests.Session()
    
    # 1. –õ–æ–≥–∏–Ω–∏–º—Å—è
    print("1. üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è...")
    login_data = {
        'username': 'test@example.com',
        'password': 'test123'
    }
    
    try:
        login_response = session.post(f"{base_url}/login", data=login_data)
        if login_response.status_code != 200:
            print("‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –°–æ–∑–¥–∞–π—Ç–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
            return False
        print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False
    
    # 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –≤–∏–¥–µ–æ –ø–æ URL
    print("\n2. üé• –ó–∞–≥—Ä—É–∑–∫–∞ –≤–∏–¥–µ–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–º–µ–Ω—ã...")
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ—Ä–æ—Ç–∫–æ–µ —Ç–µ—Å—Ç–æ–≤–æ–µ –≤–∏–¥–µ–æ, –Ω–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª–∏–Ω–Ω–æ–µ –¥–ª—è –æ—Ç–º–µ–Ω—ã
    test_video_url = "https://www.youtube.com/watch?v=dQw4w9WgXcQ"  # Rick Roll
    
    video_data = {
        'video_url': test_video_url
    }
    
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É –≤–∏–¥–µ–æ
        upload_response = session.post(f"{base_url}/upload_url", data=video_data)
        
        if upload_response.status_code == 200:
            response_data = upload_response.json()
            
            if response_data.get('success') and response_data.get('task_id'):
                task_id = response_data['task_id']
                print(f"‚úÖ –í–∏–¥–µ–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ, task_id: {task_id}")
                
                # 3. –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ, —á—Ç–æ–±—ã —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è –Ω–∞—á–∞–ª–∞—Å—å
                print(f"\n3. ‚è≥ –ñ–¥–µ–º –Ω–∞—á–∞–ª–∞ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏ (5 —Å–µ–∫—É–Ω–¥)...")
                time.sleep(5)
                
                # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏
                print(f"\n4. üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏...")
                status_response = session.get(f"{base_url}/api/analysis/status/{task_id}")
                
                if status_response.status_code == 200:
                    status_data = status_response.json()
                    if status_data.get('success'):
                        task_status = status_data['task']['status']
                        current_stage = status_data['task'].get('current_stage', 'Unknown')
                        progress = status_data['task'].get('progress', 0)
                        
                        print(f"üìã –°—Ç–∞—Ç—É—Å: {task_status}")
                        print(f"üìã –≠—Ç–∞–ø: {current_stage}")
                        print(f"üìã –ü—Ä–æ–≥—Ä–µ—Å—Å: {progress}%")
                        
                        if task_status == 'processing':
                            print("‚úÖ –ó–∞–¥–∞—á–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è, –º–æ–∂–Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–º–µ–Ω—É")
                            
                            # 5. –û—Ç–º–µ–Ω—è–µ–º –∑–∞–¥–∞—á—É
                            print(f"\n5. ‚èπÔ∏è –û—Ç–º–µ–Ω—è–µ–º –∑–∞–¥–∞—á—É {task_id}...")
                            cancel_response = session.post(f"{base_url}/api/analysis/cancel/{task_id}")
                            
                            if cancel_response.status_code == 200:
                                cancel_data = cancel_response.json()
                                
                                if cancel_data.get('success'):
                                    print("‚úÖ –ó–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ç–º–µ–Ω—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ")
                                    
                                    # 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–¥–∞—á–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞
                                    print(f"\n6. üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–º–µ–Ω—É —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã...")
                                    time.sleep(3)
                                    
                                    final_status_response = session.get(f"{base_url}/api/analysis/status/{task_id}")
                                    
                                    if final_status_response.status_code == 200:
                                        final_status_data = final_status_response.json()
                                        
                                        if final_status_data.get('success'):
                                            final_task_status = final_status_data['task']['status']
                                            print(f"üìã –§–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {final_task_status}")
                                            
                                            if final_task_status == 'cancelled':
                                                print("üéâ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù: –¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è –≤–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞!")
                                                return True
                                            else:
                                                print(f"‚ùå –¢–ï–°–¢ –ù–ï –ü–†–û–ô–î–ï–ù: –û–∂–∏–¥–∞–ª—Å—è —Å—Ç–∞—Ç—É—Å 'cancelled', –ø–æ–ª—É—á–µ–Ω '{final_task_status}'")
                                                print("   –í–æ–∑–º–æ–∂–Ω–æ, —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å –¥–æ –æ—Ç–º–µ–Ω—ã")
                                                
                                                # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - –∂–¥–µ–º –µ—â–µ –Ω–µ–º–Ω–æ–≥–æ
                                                print("   –ñ–¥–µ–º –µ—â–µ 5 —Å–µ–∫—É–Ω–¥ –¥–ª—è –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏...")
                                                time.sleep(5)
                                                
                                                extra_check_response = session.get(f"{base_url}/api/analysis/status/{task_id}")
                                                if extra_check_response.status_code == 200:
                                                    extra_check_data = extra_check_response.json()
                                                    if extra_check_data.get('success'):
                                                        extra_status = extra_check_data['task']['status']
                                                        print(f"   –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: {extra_status}")
                                                        
                                                        if extra_status == 'cancelled':
                                                            print("üéâ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù: –û—Ç–º–µ–Ω–∞ —Å—Ä–∞–±–æ—Ç–∞–ª–∞ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π!")
                                                            return True
                                                
                                                return False
                                        else:
                                            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞: {final_status_data.get('error')}")
                                            return False
                                    else:
                                        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞: {final_status_response.status_code}")
                                        return False
                                else:
                                    print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–º–µ–Ω—ã: {cancel_data.get('error')}")
                                    return False
                            else:
                                print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç–º–µ–Ω—ã: {cancel_response.status_code}")
                                return False
                        else:
                            print(f"‚ö†Ô∏è –ó–∞–¥–∞—á–∞ –Ω–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è (—Å—Ç–∞—Ç—É—Å: {task_status})")
                            print("   –í–æ–∑–º–æ–∂–Ω–æ, –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å–ª–∏—à–∫–æ–º –±—ã—Å—Ç—Ä–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–º–µ–Ω—ã")
                            return False
                    else:
                        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞: {status_data.get('error')}")
                        return False
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ —Å—Ç–∞—Ç—É—Å–∞: {status_response.status_code}")
                    return False
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ: {response_data.get('error')}")
                return False
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ HTTP –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≤–∏–¥–µ–æ: {upload_response.status_code}")
            try:
                error_data = upload_response.json()
                print(f"   –î–µ—Ç–∞–ª–∏: {error_data.get('error')}")
            except:
                print(f"   –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: {upload_response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        return False

def test_multiple_cancellations():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –æ—Ç–º–µ–Ω –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏"""
    
    print("\n" + "=" * 60)
    print("üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –æ—Ç–º–µ–Ω")
    print("=" * 60)
    
    success_count = 0
    total_tests = 3
    
    for i in range(total_tests):
        print(f"\nüß™ –¢–µ—Å—Ç {i+1}/{total_tests}")
        if test_video_transcription_cancel():
            success_count += 1
            print(f"‚úÖ –¢–µ—Å—Ç {i+1} –ø—Ä–æ–π–¥–µ–Ω")
        else:
            print(f"‚ùå –¢–µ—Å—Ç {i+1} –Ω–µ –ø—Ä–æ–π–¥–µ–Ω")
        
        if i < total_tests - 1:
            print("‚è≥ –ñ–¥–µ–º 10 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º —Ç–µ—Å—Ç–æ–º...")
            time.sleep(10)
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print(f"   –£—Å–ø–µ—à–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤: {success_count}/{total_tests}")
    print(f"   –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: {(success_count/total_tests)*100:.1f}%")
    
    return success_count == total_tests

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –æ—Ç–º–µ–Ω—ã —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏ –≤–∏–¥–µ–æ")
    print("üìù –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://127.0.0.1:5000")
    print("üë§ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: test@example.com / test123")
    print("üé• –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ YouTube –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –≤–∏–¥–µ–æ")
    print()
    
    # –û–¥–∏–Ω–æ—á–Ω—ã–π —Ç–µ—Å—Ç
    single_test_result = test_video_transcription_cancel()
    
    if single_test_result:
        print("\nüéØ –û–¥–∏–Ω–æ—á–Ω—ã–π —Ç–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω! –ó–∞–ø—É—Å–∫–∞–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ...")
        multiple_test_result = test_multiple_cancellations()
        
        if multiple_test_result:
            print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
            print("‚úÖ –û—Ç–º–µ–Ω–∞ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏ –≤–∏–¥–µ–æ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ")
        else:
            print("\n‚ö†Ô∏è –ú–ù–û–ñ–ï–°–¢–í–ï–ù–ù–´–ï –¢–ï–°–¢–´ –ß–ê–°–¢–ò–ß–ù–û –ù–ï –ü–†–û–ô–î–ï–ù–´")
            print("üîß –í–æ–∑–º–æ–∂–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å–æ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å—é –æ—Ç–º–µ–Ω—ã")
    else:
        print("\n‚ùå –û–î–ò–ù–û–ß–ù–´–ô –¢–ï–°–¢ –ù–ï –ü–†–û–ô–î–ï–ù")
        print("üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤ ml.py –∏ analysis_manager.py")
    
    print("\nüìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:")
    print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –æ–± –æ—Ç–º–µ–Ω–µ")
    print("   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è transcribe_video_with_timestamps –≤—ã–∑—ã–≤–∞–µ—Ç check_cancellation()")
    print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ analysis_manager.is_task_cancelled() —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    print("   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∑–∞–¥–∞—á–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ø–æ–º–µ—á–∞—é—Ç—Å—è –∫–∞–∫ –æ—Ç–º–µ–Ω–µ–Ω–Ω—ã–µ –≤ –ë–î")