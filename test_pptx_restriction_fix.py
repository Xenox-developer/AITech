#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π PPTX —Ñ–∞–π–ª–æ–≤
"""

import os
import sys
import sqlite3
import tempfile
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from subscription_manager import subscription_manager, SUBSCRIPTION_PLANS

def test_pptx_restrictions():
    """–¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π PPTX –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –ø–ª–∞–Ω–æ–≤"""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π PPTX —Ñ–∞–π–ª–æ–≤...")
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    with tempfile.NamedTemporaryFile(suffix='.db', delete=False) as tmp_db:
        test_db_path = tmp_db.name
    
    # –ü–æ–¥–º–µ–Ω—è–µ–º –ø—É—Ç—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –≤ –º–µ–Ω–µ–¥–∂–µ—Ä–µ –ø–æ–¥–ø–∏—Å–æ–∫
    original_db_path = subscription_manager.db_path
    subscription_manager.db_path = test_db_path
    
    try:
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        conn = sqlite3.connect(test_db_path)
        c = conn.cursor()
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        c.execute('''
            CREATE TABLE users (
                id INTEGER PRIMARY KEY,
                email TEXT UNIQUE,
                subscription_type TEXT DEFAULT 'starter',
                subscription_status TEXT DEFAULT 'active',
                monthly_analyses_used INTEGER DEFAULT 0,
                monthly_reset_date TEXT,
                total_pdf_pages_used INTEGER DEFAULT 0,
                total_video_minutes_used INTEGER DEFAULT 0,
                ai_chat_messages_used INTEGER DEFAULT 0,
                monthly_video_uploads_used INTEGER DEFAULT 0,
                subscription_start_date TEXT,
                subscription_end_date TEXT
            )
        ''')
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–∞–∑–Ω—ã–º–∏ –ø–ª–∞–Ω–∞–º–∏
        test_users = [
            (1, 'freemium@test.com', 'freemium'),
            (2, 'lite@test.com', 'lite'),
            (3, 'starter@test.com', 'starter'),
            (4, 'basic@test.com', 'basic'),
            (5, 'pro@test.com', 'pro')
        ]
        
        for user_id, email, plan in test_users:
            c.execute('''
                INSERT INTO users (id, email, subscription_type)
                VALUES (?, ?, ?)
            ''', (user_id, email, plan))
        
        conn.commit()
        conn.close()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π –ø–ª–∞–Ω
        results = {}
        
        for user_id, email, plan in test_users:
            allowed, message = subscription_manager.check_pptx_support(user_id)
            results[plan] = {
                'allowed': allowed,
                'message': message,
                'expected_allowed': SUBSCRIPTION_PLANS[plan].pptx_support
            }
            
            print(f"üìã –ü–ª–∞–Ω {plan.upper()}:")
            print(f"   –û–∂–∏–¥–∞–µ—Ç—Å—è: {'‚úÖ –†–∞–∑—Ä–µ—à–µ–Ω–æ' if SUBSCRIPTION_PLANS[plan].pptx_support else '‚ùå –ó–∞–ø—Ä–µ—â–µ–Ω–æ'}")
            print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {'‚úÖ –†–∞–∑—Ä–µ—à–µ–Ω–æ' if allowed else '‚ùå –ó–∞–ø—Ä–µ—â–µ–Ω–æ'}")
            if message:
                print(f"   –°–æ–æ–±—â–µ–Ω–∏–µ: {message}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å
            if allowed == SUBSCRIPTION_PLANS[plan].pptx_support:
                print(f"   ‚úÖ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù")
            else:
                print(f"   ‚ùå –¢–ï–°–¢ –ù–ï –ü–†–û–ô–î–ï–ù")
            print()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        all_tests_passed = True
        for plan, result in results.items():
            if result['allowed'] != result['expected_allowed']:
                all_tests_passed = False
                break
        
        if all_tests_passed:
            print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´! –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è PPTX —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
            
            # –í—ã–≤–æ–¥–∏–º —Å–≤–æ–¥–∫—É –ø–æ –ø–ª–∞–Ω–∞–º
            print("\nüìä –°–≤–æ–¥–∫–∞ –ø–æ –ø–ª–∞–Ω–∞–º:")
            print("FREEMIUM: ‚ùå PPTX –∑–∞–ø—Ä–µ—â–µ–Ω")
            print("LITE:     ‚ùå PPTX –∑–∞–ø—Ä–µ—â–µ–Ω") 
            print("STARTER:  ‚úÖ PPTX —Ä–∞–∑—Ä–µ—à–µ–Ω")
            print("BASIC:    ‚úÖ PPTX —Ä–∞–∑—Ä–µ—à–µ–Ω")
            print("PRO:      ‚úÖ PPTX —Ä–∞–∑—Ä–µ—à–µ–Ω")
            
        else:
            print("‚ùå –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ù–ï –ü–†–û–ô–î–ï–ù–´! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø–ª–∞–Ω–æ–≤.")
            
        return all_tests_passed
        
    finally:
        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –ø—É—Ç—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        subscription_manager.db_path = original_db_path
        
        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        try:
            os.unlink(test_db_path)
        except:
            pass

def test_error_messages():
    """–¢–µ—Å—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –æ–± –æ—à–∏–±–∫–∞—Ö"""
    
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –æ–± –æ—à–∏–±–∫–∞—Ö...")
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    with tempfile.NamedTemporaryFile(suffix='.db', delete=False) as tmp_db:
        test_db_path = tmp_db.name
    
    # –ü–æ–¥–º–µ–Ω—è–µ–º –ø—É—Ç—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –≤ –º–µ–Ω–µ–¥–∂–µ—Ä–µ –ø–æ–¥–ø–∏—Å–æ–∫
    original_db_path = subscription_manager.db_path
    subscription_manager.db_path = test_db_path
    
    try:
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        conn = sqlite3.connect(test_db_path)
        c = conn.cursor()
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        c.execute('''
            CREATE TABLE users (
                id INTEGER PRIMARY KEY,
                email TEXT UNIQUE,
                subscription_type TEXT DEFAULT 'starter',
                subscription_status TEXT DEFAULT 'active',
                monthly_analyses_used INTEGER DEFAULT 0,
                monthly_reset_date TEXT,
                total_pdf_pages_used INTEGER DEFAULT 0,
                total_video_minutes_used INTEGER DEFAULT 0,
                ai_chat_messages_used INTEGER DEFAULT 0,
                monthly_video_uploads_used INTEGER DEFAULT 0,
                subscription_start_date TEXT,
                subscription_end_date TEXT
            )
        ''')
        
        # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø–ª–∞–Ω–æ–º freemium (–±–µ–∑ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ PPTX)
        c.execute('''
            INSERT INTO users (id, email, subscription_type)
            VALUES (1, 'freemium@test.com', 'freemium')
        ''')
        
        conn.commit()
        conn.close()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        allowed, message = subscription_manager.check_pptx_support(1)
        
        expected_message = "–ó–∞–≥—Ä—É–∑–∫–∞ PPTX —Ñ–∞–π–ª–æ–≤ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –ø–ª–∞–Ω–∞—Ö STARTER, BASIC –∏ PRO. –û–±–Ω–æ–≤–∏—Ç–µ –ø–ª–∞–Ω –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è."
        
        print(f"–û–∂–∏–¥–∞–µ–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {expected_message}")
        print(f"–ü–æ–ª—É—á–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {message}")
        
        if message == expected_message:
            print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            return True
        else:
            print("‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            return False
            
    finally:
        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –ø—É—Ç—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        subscription_manager.db_path = original_db_path
        
        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        try:
            os.unlink(test_db_path)
        except:
            pass

if __name__ == '__main__':
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π PPTX...")
    print("=" * 60)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    test1_passed = test_pptx_restrictions()
    test2_passed = test_error_messages()
    
    print("\n" + "=" * 60)
    if test1_passed and test2_passed:
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´! –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
        print("\n‚úÖ –¢–µ–ø–µ—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –ø–ª–∞–Ω–∞–º–∏ FREE –∏ LITE –Ω–µ —Å–º–æ–≥—É—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å PPTX —Ñ–∞–π–ª—ã")
        print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –ø–ª–∞–Ω–∞–º–∏ STARTER, BASIC –∏ PRO –º–æ–≥—É—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å PPTX —Ñ–∞–π–ª—ã")
        print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã")
    else:
        print("‚ùå –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ù–ï –ü–†–û–ô–î–ï–ù–´!")
        sys.exit(1)