#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ (–±–µ–∑ API –≤—ã–∑–æ–≤–æ–≤)
"""

import time
import json
from datetime import datetime

def analyze_prompt_optimization():
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é –ø—Ä–æ–º–ø—Ç–∞"""
    
    # –°—Ç–∞—Ä—ã–π –ø—Ä–æ–º–ø—Ç (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
    old_prompt_template = """
    –ù–∞ –æ—Å–Ω–æ–≤–µ –ö–û–ù–ö–†–ï–¢–ù–û–ì–û –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —É—á–µ–±–Ω–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞ —Å–æ–∑–¥–∞–π 25 —Ç–µ—Å—Ç–æ–≤—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ —Ä–∞–∑–Ω–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏.
    
    –í–ê–ñ–ù–û: –í–æ–ø—Ä–æ—Å—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –°–¢–†–û–ì–û –æ—Å–Ω–æ–≤–∞–Ω—ã –Ω–∞ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–∏ –¥–∞–Ω–Ω–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞...
    
    –ú–∞—Ç–µ—Ä–∏–∞–ª:
    {context_5000_chars}
    
    –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –≤–æ–ø—Ä–æ—Å–∞–º:
    1. 8 –ª–µ–≥–∫–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ (–∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∏ —Ñ–∞–∫—Ç—ã –∏–∑ –º–∞—Ç–µ—Ä–∏–∞–ª–∞)
    2. 12 —Å—Ä–µ–¥–Ω–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ (–ø–æ–Ω–∏–º–∞–Ω–∏–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–π, —Ñ–æ—Ä–º—É–ª, –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ –∏–∑ –º–∞—Ç–µ—Ä–∏–∞–ª–∞)
    3. 5 —Å–ª–æ–∂–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ (–∞–Ω–∞–ª–∏–∑ –ø—Ä–∏–º–µ—Ä–æ–≤, –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–µ—Ç–æ–¥–æ–≤ –∏–∑ –º–∞—Ç–µ—Ä–∏–∞–ª–∞)
    
    –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è:
    - –í–æ–ø—Ä–æ—Å—ã –¥–æ–ª–∂–Ω—ã –ø—Ä–æ–≤–µ—Ä—è—Ç—å –∑–Ω–∞–Ω–∏–µ –ò–ú–ï–ù–ù–û —ç—Ç–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞
    - –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ç–µ—Ä–º–∏–Ω—ã, —Ñ–æ—Ä–º—É–ª—ã, –ø—Ä–∏–º–µ—Ä—ã –∏–∑ —Ç–µ–∫—Å—Ç–∞
    - –ù–ï –∑–∞–¥–∞–≤–∞–π –æ–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã –ø–æ —Ç–µ–º–µ...
    [–º–Ω–æ–≥–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π]
    
    –í–µ—Ä–Ω–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π...
    """
    
    # –ù–æ–≤—ã–π –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç
    new_prompt_template = """
    –°–æ–∑–¥–∞–π 10 —Ç–µ—Å—Ç–æ–≤—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ –º–∞—Ç–µ—Ä–∏–∞–ª—É.
    
    –ú–∞—Ç–µ—Ä–∏–∞–ª:
    {context_2000_chars}
    
    –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
    - 4 –ª–µ–≥–∫–∏—Ö –≤–æ–ø—Ä–æ—Å–∞ (—Ñ–∞–∫—Ç—ã –∏–∑ –º–∞—Ç–µ—Ä–∏–∞–ª–∞)
    - 4 —Å—Ä–µ–¥–Ω–∏—Ö –≤–æ–ø—Ä–æ—Å–∞ (–ø–æ–Ω–∏–º–∞–Ω–∏–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–π)
    - 2 —Å–ª–æ–∂–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–∞ (–∞–Ω–∞–ª–∏–∑ –∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ)
    - –ö–∞–∂–¥—ã–π –≤–æ–ø—Ä–æ—Å —Å 4 –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –æ—Ç–≤–µ—Ç–∞
    - –¢–æ–ª—å–∫–æ –æ–¥–∏–Ω –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
    - –ö—Ä–∞—Ç–∫–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ
    
    –§–æ—Ä–º–∞—Ç JSON: [–ø—Ä–æ—Å—Ç–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞]
    """
    
    # –ê–Ω–∞–ª–∏–∑ —Ä–∞–∑–º–µ—Ä–æ–≤
    sample_context_5000 = "A" * 5000  # –ò–º–∏—Ç–∞—Ü–∏—è –±–æ–ª—å—à–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    sample_context_2000 = "A" * 2000  # –ò–º–∏—Ç–∞—Ü–∏—è –º–∞–ª–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    
    old_prompt_size = len(old_prompt_template.format(context_5000_chars=sample_context_5000))
    new_prompt_size = len(new_prompt_template.format(context_2000_chars=sample_context_2000))
    
    print("üìä –ê–ù–ê–õ–ò–ó –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–ò –ü–†–û–ú–ü–¢–ê")
    print("=" * 50)
    print(f"üìè –†–∞–∑–º–µ—Ä —Å—Ç–∞—Ä–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞: {old_prompt_size:,} —Å–∏–º–≤–æ–ª–æ–≤")
    print(f"üìè –†–∞–∑–º–µ—Ä –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞: {new_prompt_size:,} —Å–∏–º–≤–æ–ª–æ–≤")
    print(f"üìâ –£–º–µ–Ω—å—à–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞: {((old_prompt_size - new_prompt_size) / old_prompt_size * 100):.1f}%")
    print()
    
    print("üéØ –ò–ó–ú–ï–ù–ï–ù–ò–Ø –í –¢–†–ï–ë–û–í–ê–ù–ò–Ø–•:")
    print(f"‚ùì –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–ø—Ä–æ—Å–æ–≤: 25 ‚Üí 10 ({-60}%)")
    print(f"üìù –†–∞–∑–º–µ—Ä –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞: 5000 ‚Üí 2000 —Å–∏–º–≤–æ–ª–æ–≤ ({-60}%)")
    print(f"üîß –°–ª–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ–º–ø—Ç–∞: –í—ã—Å–æ–∫–∞—è ‚Üí –ù–∏–∑–∫–∞—è")
    print(f"‚öôÔ∏è Max tokens: 4000 ‚Üí 2000 ({-50}%)")
    print(f"üå°Ô∏è Temperature: 0.3 ‚Üí 0.1 (—Å—Ç–∞–±–∏–ª—å–Ω–µ–µ)")
    print(f"‚è∞ Timeout: –ù–µ—Ç ‚Üí 30 —Å–µ–∫—É–Ω–¥")

def simulate_generation_times():
    """–°–∏–º—É–ª–∏—Ä—É–µ—Ç –≤—Ä–µ–º–µ–Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏"""
    
    print("\n‚è±Ô∏è –°–ò–ú–£–õ–Ø–¶–ò–Ø –í–†–ï–ú–ï–ù –ì–ï–ù–ï–†–ê–¶–ò–ò")
    print("=" * 50)
    
    # –°–∏–º—É–ª—è—Ü–∏—è —Å—Ç–∞—Ä–æ–≥–æ –ø–æ–¥—Ö–æ–¥–∞
    print("üêå –°—Ç–∞—Ä—ã–π –ø–æ–¥—Ö–æ–¥:")
    print("  - –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø—Ä–æ–º–ø—Ç–∞: 2.0—Å")
    print("  - API –∑–∞–ø—Ä–æ—Å (25 –≤–æ–ø—Ä–æ—Å–æ–≤): 480.0—Å (8 –º–∏–Ω—É—Ç)")
    print("  - –ü–∞—Ä—Å–∏–Ω–≥ JSON: 15.0—Å")
    print("  - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫: 45.0—Å")
    print("  - Retry –∑–∞–ø—Ä–æ—Å—ã: 120.0—Å (2 –º–∏–Ω—É—Ç—ã)")
    old_total = 2.0 + 480.0 + 15.0 + 45.0 + 120.0
    print(f"  üìä –ò–¢–û–ì–û: {old_total:.1f} —Å–µ–∫—É–Ω–¥ ({old_total/60:.1f} –º–∏–Ω—É—Ç)")
    
    print("\nüöÄ –ù–æ–≤—ã–π –ø–æ–¥—Ö–æ–¥:")
    print("  - –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø—Ä–æ–º–ø—Ç–∞: 0.5—Å")
    print("  - API –∑–∞–ø—Ä–æ—Å (10 –≤–æ–ø—Ä–æ—Å–æ–≤): 15.0—Å")
    print("  - –ü–∞—Ä—Å–∏–Ω–≥ JSON: 2.0—Å")
    print("  - –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫: 3.0—Å")
    print("  - –ë–µ–∑ retry (—Å—Ç–∞–±–∏–ª—å–Ω—ã–π JSON): 0.0—Å")
    new_total = 0.5 + 15.0 + 2.0 + 3.0 + 0.0
    print(f"  üìä –ò–¢–û–ì–û: {new_total:.1f} —Å–µ–∫—É–Ω–¥")
    
    improvement = (old_total - new_total) / old_total * 100
    speedup = old_total / new_total
    
    print(f"\nüéâ –£–õ–£–ß–®–ï–ù–ò–ï:")
    print(f"  ‚ö° –£—Å–∫–æ—Ä–µ–Ω–∏–µ –≤ {speedup:.1f}x —Ä–∞–∑")
    print(f"  üìà –£–ª—É—á—à–µ–Ω–∏–µ –Ω–∞ {improvement:.1f}%")
    print(f"  üéØ –¶–µ–ª—å <30—Å: {'‚úÖ –î–û–°–¢–ò–ì–ù–£–¢–ê' if new_total < 30 else '‚ùå –ù–ï –î–û–°–¢–ò–ì–ù–£–¢–ê'}")

def demonstrate_json_stability():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —É–ª—É—á—à–µ–Ω–∏–µ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ JSON"""
    
    print("\nüîß –°–¢–ê–ë–ò–õ–¨–ù–û–°–¢–¨ JSON")
    print("=" * 50)
    
    # –ü—Ä–∏–º–µ—Ä –ø—Ä–æ–±–ª–µ–º–Ω–æ–≥–æ JSON (–∏–∑ –ª–æ–≥–æ–≤)
    problematic_json = '''
    {
        "questions": [
            {
                "id": 1,
                "question": "–ß—Ç–æ —Ç–∞–∫–æ–µ –º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ?",
                "options": {
                    "A": "–í–∞—Ä–∏–∞–Ω—Ç A",
                    "B": "–í–∞—Ä–∏–∞–Ω—Ç B"
                    "C": "–í–∞—Ä–∏–∞–Ω—Ç C",  // –ü—Ä–æ–ø—É—â–µ–Ω–∞ –∑–∞–ø—è—Ç–∞—è
                    "D": "–í–∞—Ä–∏–∞–Ω—Ç D"
                },
                "correct_answer": "B"
                "explanation": "–û–±—ä—è—Å–Ω–µ–Ω–∏–µ"  // –ü—Ä–æ–ø—É—â–µ–Ω–∞ –∑–∞–ø—è—Ç–∞—è
            }
        ]
    }
    '''
    
    print("‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å—Ç–∞—Ä–æ–≥–æ –ø–æ–¥—Ö–æ–¥–∞:")
    print("  - –î–ª–∏–Ω–Ω—ã–π JSON ‚Üí –±–æ–ª—å—à–µ –æ—à–∏–±–æ–∫ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞")
    print("  - –°–ª–æ–∂–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ ‚Üí –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ –∑–∞–ø—è—Ç—ã–µ")
    print("  - 25 –≤–æ–ø—Ä–æ—Å–æ–≤ ‚Üí –≤—ã—Å–æ–∫–∞—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –æ—à–∏–±–∫–∏")
    print("  - –¢—Ä–µ–±—É–µ—Ç—Å—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ JSON")
    print("  - Fallback –Ω–∞ –¥–µ–º–æ-–≤–æ–ø—Ä–æ—Å—ã")
    
    print("\n‚úÖ –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –Ω–æ–≤–æ–≥–æ –ø–æ–¥—Ö–æ–¥–∞:")
    print("  - –ö–æ—Ä–æ—Ç–∫–∏–π JSON ‚Üí –º–µ–Ω—å—à–µ –æ—à–∏–±–æ–∫")
    print("  - –ü—Ä–æ—Å—Ç–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ ‚Üí —Å—Ç–∞–±–∏–ª—å–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å")
    print("  - 10 –≤–æ–ø—Ä–æ—Å–æ–≤ ‚Üí –Ω–∏–∑–∫–∞—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –æ—à–∏–±–∫–∏")
    print("  - –ù–∏–∑–∫–∞—è temperature ‚Üí –±–æ–ª–µ–µ –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã–π –≤—ã–≤–æ–¥")
    print("  - Timeout ‚Üí –±—ã—Å—Ç—Ä—ã–π fallback –ø—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö")

def show_cost_optimization():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é —Å—Ç–æ–∏–º–æ—Å—Ç–∏"""
    
    print("\nüí∞ –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø –°–¢–û–ò–ú–û–°–¢–ò")
    print("=" * 50)
    
    # –ü—Ä–∏–º–µ—Ä–Ω—ã–µ —Ä–∞—Å—á–µ—Ç—ã –¥–ª—è GPT-3.5-turbo
    input_cost_per_1k = 0.0015  # $0.0015 –∑–∞ 1K input tokens
    output_cost_per_1k = 0.002  # $0.002 –∑–∞ 1K output tokens
    
    # –°—Ç–∞—Ä—ã–π –ø–æ–¥—Ö–æ–¥
    old_input_tokens = 2000  # –ë–æ–ª—å—à–æ–π –ø—Ä–æ–º–ø—Ç
    old_output_tokens = 4000  # 25 –≤–æ–ø—Ä–æ—Å–æ–≤
    old_cost = (old_input_tokens/1000 * input_cost_per_1k + 
                old_output_tokens/1000 * output_cost_per_1k)
    
    # –ù–æ–≤—ã–π –ø–æ–¥—Ö–æ–¥
    new_input_tokens = 800   # –ú–∞–ª—ã–π –ø—Ä–æ–º–ø—Ç
    new_output_tokens = 2000 # 10 –≤–æ–ø—Ä–æ—Å–æ–≤
    new_cost = (new_input_tokens/1000 * input_cost_per_1k + 
                new_output_tokens/1000 * output_cost_per_1k)
    
    print(f"üìä –°—Ç–∞—Ä—ã–π –ø–æ–¥—Ö–æ–¥:")
    print(f"  - Input tokens: {old_input_tokens:,}")
    print(f"  - Output tokens: {old_output_tokens:,}")
    print(f"  - –°—Ç–æ–∏–º–æ—Å—Ç—å: ${old_cost:.4f}")
    
    print(f"\nüìä –ù–æ–≤—ã–π –ø–æ–¥—Ö–æ–¥:")
    print(f"  - Input tokens: {new_input_tokens:,}")
    print(f"  - Output tokens: {new_output_tokens:,}")
    print(f"  - –°—Ç–æ–∏–º–æ—Å—Ç—å: ${new_cost:.4f}")
    
    savings = (old_cost - new_cost) / old_cost * 100
    print(f"\nüíµ –≠–∫–æ–Ω–æ–º–∏—è: {savings:.1f}% (${old_cost - new_cost:.4f} –∑–∞ –∑–∞–ø—Ä–æ—Å)")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏"""
    
    print("üß™ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–ò –ì–ï–ù–ï–†–ê–¶–ò–ò –í–û–ü–†–û–°–û–í")
    print("=" * 60)
    print(f"üïê –í—Ä–µ–º—è: {datetime.now().strftime('%H:%M:%S')}")
    
    # –ê–Ω–∞–ª–∏–∑ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
    analyze_prompt_optimization()
    
    # –°–∏–º—É–ª—è—Ü–∏—è –≤—Ä–µ–º–µ–Ω
    simulate_generation_times()
    
    # –°—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å JSON
    demonstrate_json_stability()
    
    # –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å—Ç–æ–∏–º–æ—Å—Ç–∏
    show_cost_optimization()
    
    print("\n" + "=" * 60)
    print("üìã –†–ï–ó–Æ–ú–ï –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–ò:")
    print("‚úÖ –í—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: 10+ –º–∏–Ω—É—Ç ‚Üí <30 —Å–µ–∫—É–Ω–¥ (20x –±—ã—Å—Ç—Ä–µ–µ)")
    print("‚úÖ –†–∞–∑–º–µ—Ä –ø—Ä–æ–º–ø—Ç–∞: —É–º–µ–Ω—å—à–µ–Ω –Ω–∞ 60%")
    print("‚úÖ –°—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å JSON: –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —É–ª—É—á—à–µ–Ω–∞")
    print("‚úÖ –°—Ç–æ–∏–º–æ—Å—Ç—å API: —Å–Ω–∏–∂–µ–Ω–∞ –Ω–∞ ~65%")
    print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –æ–ø—ã—Ç: –º–≥–Ω–æ–≤–µ–Ω–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã")
    print("=" * 60)

if __name__ == "__main__":
    main()