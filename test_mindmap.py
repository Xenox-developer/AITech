#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ mind-map –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ
"""

import sqlite3
import json
import sys

def test_mindmap_data():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º mind-map –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–µ"""
    try:
        conn = sqlite3.connect('ai_study.db')
        c = conn.cursor()
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        c.execute('''
            SELECT id, filename, mind_map_json 
            FROM result 
            ORDER BY created_at DESC 
            LIMIT 5
        ''')
        
        results = c.fetchall()
        
        if not results:
            print("‚ùå –ù–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
            return False
        
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ {len(results)} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:")
        
        for result_id, filename, mind_map_json in results:
            print(f"\nüîç ID: {result_id}, –§–∞–π–ª: {filename}")
            
            if not mind_map_json:
                print("  ‚ùå mind_map_json –ø—É—Å—Ç–æ–π")
                continue
            
            try:
                mind_map_data = json.loads(mind_map_json)
                print(f"  ‚úÖ mind_map_json –∑–∞–≥—Ä—É–∂–µ–Ω")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
                if 'central_topic' in mind_map_data:
                    print(f"  üìç –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è —Ç–µ–º–∞: {mind_map_data['central_topic']}")
                else:
                    print("  ‚ùå –ù–µ—Ç central_topic")
                
                if 'branches' in mind_map_data:
                    branches = mind_map_data['branches']
                    print(f"  üåø –í–µ—Ç–æ–∫: {len(branches)}")
                    
                    for i, branch in enumerate(branches[:3]):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                        name = branch.get('name', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')
                        children_count = len(branch.get('children', []))
                        print(f"    {i+1}. {name} ({children_count} –ø–æ–¥—Ç–µ–º)")
                else:
                    print("  ‚ùå –ù–µ—Ç branches")
                    
            except json.JSONDecodeError as e:
                print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON: {e}")
        
        conn.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def test_api_endpoint():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º API endpoint"""
    try:
        import requests
        
        # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        conn = sqlite3.connect('ai_study.db')
        c = conn.cursor()
        c.execute('SELECT id FROM result ORDER BY created_at DESC LIMIT 1')
        result = c.fetchone()
        conn.close()
        
        if not result:
            print("‚ùå –ù–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API")
            return False
        
        result_id = result[0]
        url = f'http://localhost:5000/api/mind_map/{result_id}'
        
        print(f"üåê –¢–µ—Å—Ç–∏—Ä—É–µ–º API: {url}")
        
        response = requests.get(url, timeout=10)
        
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç")
            print(f"üìä –î–∞–Ω–Ω—ã–µ: {json.dumps(data, ensure_ascii=False, indent=2)}")
            return True
        else:
            print(f"‚ùå API –æ—à–∏–±–∫–∞: {response.status_code}")
            print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API: {e}")
        return False

if __name__ == "__main__":
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Mind-Map –¥–∞–Ω–Ω—ã—Ö\n")
    
    print("1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ:")
    db_ok = test_mindmap_data()
    
    print("\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ API endpoint:")
    api_ok = test_api_endpoint()
    
    print(f"\nüìã –†–µ–∑—É–ª—å—Ç–∞—Ç:")
    print(f"  –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {'‚úÖ' if db_ok else '‚ùå'}")
    print(f"  API endpoint: {'‚úÖ' if api_ok else '‚ùå'}")
    
    if not db_ok or not api_ok:
        print("\nüîß –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã:")
        if not db_ok:
            print("  - Mind-map –¥–∞–Ω–Ω—ã–µ –Ω–µ –≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç—Å—è –∏–ª–∏ –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è")
            print("  - –ü—Ä–æ–±–ª–µ–º–∞ —Å —Ñ—É–Ω–∫—Ü–∏–µ–π generate_mind_map")
        if not api_ok:
            print("  - API endpoint –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            print("  - –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω")
            print("  - –ü—Ä–æ–±–ª–µ–º–∞ —Å –º–∞—Ä—à—Ä—É—Ç–æ–º /api/mind_map")