#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —É—á–µ–±–Ω—ã—Ö —Å–µ—Å—Å–∏–π
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app import get_or_create_user_study_sessions
import sqlite3

def test_study_sessions():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —É—á–µ–±–Ω—ã—Ö —Å–µ—Å—Å–∏–π"""
    print("üìö –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —É—á–µ–±–Ω—ã—Ö —Å–µ—Å—Å–∏–π...")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è test@test.ru (ID = 1)
    user_id = 1
    
    print(f"\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Å—Å–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –µ—Å—Ç—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    conn = sqlite3.connect('ai_study.db')
    c = conn.cursor()
    
    c.execute('SELECT COUNT(*) FROM study_sessions WHERE user_id = ?', (user_id,))
    db_count = c.fetchone()[0]
    print(f"üìä –í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {db_count} —Å–µ—Å—Å–∏–π")
    
    c.execute('''
        SELECT id, title, phase, status 
        FROM study_sessions 
        WHERE user_id = ? 
        ORDER BY created_at
    ''', (user_id,))
    
    db_sessions = c.fetchall()
    print(f"üìã –°–µ—Å—Å–∏–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:")
    for session in db_sessions:
        print(f"  ID: {session[0]}, –ù–∞–∑–≤–∞–Ω–∏–µ: {session[1]}, –§–∞–∑–∞: {session[2]}, –°—Ç–∞—Ç—É—Å: {session[3]}")
    
    conn.close()
    
    # –¢–µ–ø–µ—Ä—å —Ç–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑
    print(f"\nüîß –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–Ω–æ–≥–æ–∫—Ä–∞—Ç–Ω—ã–π –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏...")
    
    for i in range(3):
        print(f"\n--- –í—ã–∑–æ–≤ {i+1} ---")
        try:
            sessions = get_or_create_user_study_sessions(user_id)
            print(f"‚úÖ –§—É–Ω–∫—Ü–∏—è –≤–µ—Ä–Ω—É–ª–∞ {len(sessions)} —Å–µ—Å—Å–∏–π")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å–æ–∑–¥–∞–ª–∏—Å—å –ª–∏ –Ω–æ–≤—ã–µ —Å–µ—Å—Å–∏–∏
            conn = sqlite3.connect('ai_study.db')
            c = conn.cursor()
            c.execute('SELECT COUNT(*) FROM study_sessions WHERE user_id = ?', (user_id,))
            current_count = c.fetchone()[0]
            conn.close()
            
            print(f"üìä –í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {current_count} —Å–µ—Å—Å–∏–π")
            
            if current_count > db_count:
                print(f"‚ö†Ô∏è  –ü–†–û–ë–õ–ï–ú–ê: –°–æ–∑–¥–∞–ª–∏—Å—å –Ω–æ–≤—ã–µ —Å–µ—Å—Å–∏–∏! –ë—ã–ª–æ {db_count}, —Å—Ç–∞–ª–æ {current_count}")
                db_count = current_count  # –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏
            else:
                print(f"‚úÖ –•–æ—Ä–æ—à–æ: –ù–æ–≤—ã–µ —Å–µ—Å—Å–∏–∏ –Ω–µ —Å–æ–∑–¥–∞–ª–∏—Å—å")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏: {e}")
            import traceback
            traceback.print_exc()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é get_user_learning_stats
    print(f"\nüîß –¢–µ—Å—Ç–∏—Ä—É–µ–º get_user_learning_stats({user_id})...")
    
    try:
        from app import get_user_learning_stats
        learning_stats = get_user_learning_stats(user_id)
        
        print(f"‚úÖ get_user_learning_stats –≤–µ—Ä–Ω—É–ª–∞ –¥–∞–Ω–Ω—ã–µ")
        print(f"üìö –£—á–µ–±–Ω—ã—Ö —Å–µ—Å—Å–∏–π: {len(learning_stats.get('study_sessions', []))}")
        
        for i, session in enumerate(learning_stats.get('study_sessions', []), 1):
            print(f"  {i}. {session['title']} ({session['phase']}) - {session['status']}")
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ—Å—Å–∏–π
        conn = sqlite3.connect('ai_study.db')
        c = conn.cursor()
        c.execute('SELECT COUNT(*) FROM study_sessions WHERE user_id = ?', (user_id,))
        final_count = c.fetchone()[0]
        conn.close()
        
        print(f"\nüìä –§–∏–Ω–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ—Å—Å–∏–π –≤ –±–∞–∑–µ: {final_count}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ get_user_learning_stats: {e}")
        import traceback
        traceback.print_exc()

if __name__ == '__main__':
    test_study_sessions()